"""
读文件
过程：
1.打开文件
2.读文件内容
3.关闭文件
"""
"""
1.打开文件
open(path,flag[,encoding][,errors])
path:要打开文件的路径
flag:打开方式
r    以只读方式打开文件，文件的描述符（指针）在文件的开头
rb   以二进制格式只读方式打开文件，文件的描述符（指针）在文件的开头
r+   以读写方式打开文件，文件的描述符（指针）在文件的开头
w    打开一个文件用于写入，该文件如已存在，则覆盖，如不存在，则创建新文件
wb   打开一个文件用于写入二进制，该文件如已存在，则覆盖，如不存在，则创建新文件
w+   打开一个文件用于读写，该文件如已存在，则覆盖，如不存在，则创建新文件
a    打开一个文件用于追加，该文件如已存在，则追加，文件的描述符在文件的末尾，如不存在，则创建新文件
a+
encoding:编码方式
errors:错误处理
"""
path='d:/suck.txt'
# f=open(path,'w')
# f.write("suck")
# f.close()
#ignore 忽略错误
# f=open(path,"r",encoding="utf-8",errors="ignore") #系统默认
f=open(path,"r")
"""
2.读文件
"""
# 1.读取文件全部内容
# str1=f.read()
# print(str1)

# 2.如后面括号有指定数字，读取文件指字数字的字符
# str2=f.read(10)
# print(str2)

#3.读取整行，包括换行符"\n"
# str3=f.readline()
# print(str3)
# str4=f.readline()
# print(str4)
# 结果：
# suck卖
#
# main

#4.读取指定字符数
# str6=f.readline(3)
# print(str6)

#5.读取所有行，并返回列表
# str7=f.readlines()
# print(str7)

#6.给定的数字大于0返回实际size字节的行数，大于一行的字节，就返两行，以此类推
# str8=f.readlines(5)
# print(str8)

#7.修改文件描述符（指针）的位置
# str9=f.read()
# print(str9)
# print("******")
# f.seek(0)  #指针移动到开始位置
# str10=f.read()
# print(str10)

"""
3.关闭文件
"""
f.close()

# 一个完整的读文件过程
try:
    f1=open(path,"r",encoding="utf-8")
    print(f1)
finally:
    if f1:
        f1.close()

#上面的简洁写法        
with open(path,"r",encoding="utf-8") as f2:
    print(f2.read())
