# -*- coding: utf-8 -*-
# 112-读取pdf文件
# 首先安装 pip install pdfminer3k

import importlib
import sys
importlib.reload(sys)

from pdfminer.pdfparser import PDFParser,PDFDocument
from pdfminer.pdfinterp import PDFResourceManager,PDFPageInterpreter
from pdfminer.converter import PDFPageAggregator
from pdfminer.layout import LTTextBoxHorizontal,LAParams
from pdfminer.pdfinterp import PDFTextExtractionNotAllowed


def readPdf(path,toPath):
    # 以二进制形式打开pdf文件
    f = open(path,"rb")
    # 创建一个pdf文档分析器
    parser = PDFParser(f)
    # 创建pdf文档
    pdfFile=PDFDocument()
    # 链接分析器与文档对象
    parser.set_document(pdfFile)
    pdfFile.set_parser(parser)
    #提供初始化密码
    pdfFile.initialize()

    # 检测文档是否提供txt转换(如果提供转换为值 ，不提供为假，不提供就退出)
    if not pdfFile.is_extractable:
        raise PDFTextExtractionNotAllowed
    else:
        print("e")
        # 数据管理器
        manager = PDFResourceManager()
        # 创建一个pdf设备对象
        laparams = LAParams()
        device = PDFPageAggregator(manager,laparams=laparams)
        # 解释器对象
        interpreter = PDFPageInterpreter(manager,device)
        # 开始循环处理,每次处理一页
        for page in pdfFile.get_pages():
            interpreter.process_page(page)
            layout = device.get_result()
            for x in layout:
                # print(type(x)) #<class 'pdfminer.layout.LTFigure'>
                if(isinstance(x,LTTextBoxHorizontal)):
                    with open(toPath,"a") as ff:
                        str = x.get_text()
                        print(str)
                        ff.write(str+"\n")

path = r"D:\ppp\88.pdf"
toPath=r"D:\ppp\a.txt"
readPdf(path,toPath)



